import asyncio

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import (InlineKeyboardMarkup, InlineKeyboardButton,
                           CallbackQuery)

import database
from config import costum_id, stikcer_gerl, sticker_help, sticker_custom
from load_all import dp, bot, _

import keyboard as kb
db = database.DBCommands()


# @dp.message_handler(commands=["referrals"])
# async def check_referrals(message: types.Message):
#     referrals = await db.check_referrals()
#     text = _("–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:\n{referrals}").format(referrals=referrals)
#     await message.answer(text)
#

@dp.message_handler(commands=['contact'], state="*")
async def contact(message: types.Message, state: FSMContext):
    msg = message.chat.id
    await bot.send_sticker(msg, sticker=stikcer_gerl)
    await bot.send_message(msg, _("–ö–æ–Ω—Ç–∞–∫—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞:\n"
                                  "–§–û–ü –õ–æ–ø—É—à–Ω—è–∫ –û–ª–µ–≥ –°–µ–º–µ–Ω–æ–≤–∏—á –ó–ö–ü–û–£ 2690915715\n"
                                  "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: –≥. –ö–∏–µ–≤, —É–ª. –°–∏–º–∏—Ä–µ–Ω–∫–∞ 2-–ë, –∫–≤.104\n"
                                  "\n–¢–µ–ª–µ—Ñ–æ–Ω—ã: 0964492838, 0994908521"
                                  "\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: oleglopushnyak@ukr.net\n"
                                  "–ê–¥—Ä–µ—Å –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞: –≥. –ö–∏–µ–≤\n–ø—Ä–æ—Å–ø–µ–∫—Ç –õ–µ—Å—è –ö—É—Ä–±–∞—Å–∞ 2/13\n–ê–ø—Ç–µ–∫–∞ –õ–µ–∫–∞—Ñ–∞—Ä–º\n"
                                  "–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 8:00 –¥–æ 21:00"))
    await asyncio.sleep(1.0)
    await bot.send_message(message.chat.id, _("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã üì¶ : /items\n"
                                              "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üîç : /help"))


@dp.message_handler(commands=['help'], state="*")
async def contact(message: types.Message):
    msg = message.chat.id
    await bot.send_sticker(msg, sticker=sticker_help)
    await bot.send_message(msg, _("/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                                  "/items - üì¶ –¢–æ–≤–∞—Ä—ã\n"
                                  "/delivery - üöö  –£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏\n"
                                  "/custom - üìñ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ\n"
                                  "/contact - ‚òé –ö–æ–Ω—Ç–∞–∫—Ç—ã\n"))


@dp.message_handler(commands=['custom'], state="*")
async def contact(message: types.Message, state: FSMContext):
    msg = message.chat.id
    await bot.send_sticker(msg, sticker=sticker_custom)
    await bot.send_document(msg, costum_id)
    await asyncio.sleep(1.0)
    markup = InlineKeyboardMarkup(
        inline_keyboard=
        [
            [InlineKeyboardButton(text=_("–ü—Ä–∏–Ω—è—Ç—å"), callback_data="accept")]
        ]
    )

    await bot.send_message(msg, text=_("–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –∏ –ø—Ä–∏–º–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞\n–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ üëá"),
                           reply_markup=markup)


@dp.callback_query_handler(text_contains="accept")
async def approval(call: CallbackQuery):
    await call.message.edit_reply_markup()
    await call.message.answer(text=_("–°–ø–∞—Å–∏–±–æ, –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üîç  /help\n"
                                     "–ò–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),reply_markup=kb.markup_back)
